% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathway_perturbation.R
\name{get_pps}
\alias{get_pps}
\title{Patient-Specific Pathway Scores (PPS)}
\usage{
get_pps(gene_scores, pathways, threshold_level_ps = 0.01, show_progress = TRUE)
}
\arguments{
\item{gene_scores}{Numeric matrix (genes x samples). Row names must be gene
symbols; column names are patient IDs.}

\item{pathways}{Either the list returned by \code{get_ripplet_pathways()}
(uses \code{$SPIA_Norm_Adj_Matrices}) or a named list of normalized
pathway adjacency matrices (genes x genes).}

\item{threshold_level_ps}{Numeric scalar; values in \code{gene_scores} below
this threshold are set to 0 (default \code{0.01}).}

\item{show_progress}{Logical; if \code{TRUE}, show a progress bar when the
\pkg{progress} package is available (default \code{TRUE}).}
}
\value{
A named list with one \code{data.frame} per sample. Each data frame
has columns \code{Pathway} and \code{sumpfs} (sum of perturbation factors), sorted decreasing by \code{sumpfs}.
}
\description{
Compute one pathway score per pathway and per patient from gene-level scores
and a list of RIPPLET-normalized pathway adjacency matrices. Returns a
ranked table for each patient. Accepts either the full output of
\code{\link{get_ripplet_pathways}()} or a plain named list of normalized
pathway matrices. Function ‘newspia‘ This function is based on SPIA algorithm, adapted from \code{PMAPscore::newspia} (Han et al., 2022).
}
\examples{
\dontrun{
# Gene scores (e.g., from ripplet_gene)
# gis <- ripplet_gene(edgelist, mutmat, verbose = FALSE)

# Pathways
# pw <- get_ripplet_pathways(data.base = "reactome", show_progress = FALSE)

# Sample-specific pathway scores
# pps <- get_pps(gene_scores = gis, pathways = pw, threshold_level_ps = 0.01)
# head(pps[[1]])
}

}
